--FUNCIONES TRANSACCIONALES Y DE INSERCION DE DATOS PARA LA TABLA TAB_PRUEBA------------------------------------------------------------------------------------------------------------
--FUNCION PARA VALIDAR LOS DATOS A INSERTAR EN LA TABLA PRUEBA
CREATE OR REPLACE FUNCTION FUN_VALIDAR_DATOS_PRUEBA(wNOM_PRUEBA TAB_PRUEBA.NOM_PRUEBA%TYPE,
                            wDESCRIPCION_PRUEBA TAB_PRUEBA.DESCRIPCION_PRUEBA%TYPE) RETURNS INTEGER AS
$$
    DECLARE
        RETORNO INTEGER;
    BEGIN
        --VALIDACION DEL PARAMETRO wNOM_PRUEBA TIENE QUE SER MAYOR A 3 CARACTERES Y NO NULO
        IF LENGTH(wNOM_PRUEBA) < 3 OR wNOM_PRUEBA IS NULL THEN
            RETORNO := 5001;
            RETURN RETORNO;
        --VALIDACION DEL PARAMETRO wDESCRIPCION_PRUEBA TIENE QUE SER MAYOR A 3 CARACTERES Y NO NULO
        ELSIF LENGTH(wDESCRIPCION_PRUEBA) < 3 OR wDESCRIPCION_PRUEBA IS NULL THEN
            RETORNO := 5002;
            RETURN RETORNO;
        --EVALUAR SI LA PRUEBA YA EXISTE
        --CONVERTIR EL NOMBRE A MAYUSCULAS
        ELSEIF EXISTS(SELECT * FROM TAB_PRUEBA WHERE UPPER(NOM_PRUEBA) = UPPER(wNOM_PRUEBA)) THEN
            RETORNO := 5003;
            RETURN RETORNO;
        ELSE
            RETORNO := 200;
            RETURN RETORNO;
        END IF;        
    END;
$$
LANGUAGE plpgsql;

--FUNCION PARA INSERTAR DATOS EN LA TABLA PRUEBA
CREATE OR REPLACE FUNCTION FUN_INSERTAR_PRUEBA(wNOM_PRUEBA TAB_PRUEBA.NOM_PRUEBA%TYPE,
                            wDESCRIPCION_PRUEBA TAB_PRUEBA.DESCRIPCION_PRUEBA%TYPE) RETURNS INTEGER AS
$$
    DECLARE
        RETORNO INTEGER;
        VALIDACION INTEGER;
        ULTIMOID INTEGER;
    BEGIN
        --VALIDAR LOS DATOS A INSERTAR
        VALIDACION := FUN_VALIDAR_DATOS_PRUEBA(wNOM_PRUEBA,wDESCRIPCION_PRUEBA);
        --SI LA VALIDACION ES CORRECTA INSERTAR LOS DATOS
        IF VALIDACION = 200 THEN
            --GENERAR ID AUTOINCREMENTABLE USANDO LA FUNCION funcion_Retorna_ultmoid
            SELECT INTO ULTIMOID funcion_Retorna_ultmoid('TAB_PRUEBA','ID_PRUEBA');
            --CONVERTIR EL NOMBRE A MAYUSCULAS
            wNOM_PRUEBA := UPPER(wNOM_PRUEBA);
            --INSERTAR DATOS EN LA TABLA PRUEBA
            INSERT INTO TAB_PRUEBA VALUES(ULTIMOID,wNOM_PRUEBA,wDESCRIPCION_PRUEBA);
            IF FOUND THEN
                RETORNO := 200;
                RETURN RETORNO;
            ELSE
                RETORNO := 1;
                RETURN RETORNO;
            END IF;
        ELSE
            RETURN VALIDACION;
        END IF;
    END;
$$
LANGUAGE plpgsql;

