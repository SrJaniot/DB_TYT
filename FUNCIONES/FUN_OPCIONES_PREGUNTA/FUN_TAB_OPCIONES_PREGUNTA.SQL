--FUNCIONES TRANSACCIONALES Y DE INSERCION DE DATOS PARA LA TABLA TAB_OPCIONES_PREGUNTA------------------------------------------------------------------------------------------------------------
--FUNCION PARA VALIDAR LOS DATOS A INSERTAR EN LA TABLA OPCIONES_PREGUNTA   
CREATE OR REPLACE FUNCTION FUN_VALIDAR_DATOS_OPCIONES_PREGUNTA(wID_PREGUNTA TAB_OPCIONES_PREGUNTA.ID_PREGUNTA%TYPE,
                            wTEXTO_OPCION TAB_OPCIONES_PREGUNTA.TEXTO_OPCION%TYPE,
                            wES_CORRECTA TAB_OPCIONES_PREGUNTA.ES_CORRECTA%TYPE) RETURNS INTEGER AS
$$
    DECLARE
        RETORNO INTEGER;
    BEGIN
        --VALIDACION DEL PARAMETRO wID_PREGUNTA TIENE QUE SER MAYOR A 0 Y NO NULO
        IF wID_PREGUNTA <= 0 OR wID_PREGUNTA IS NULL THEN
            RETORNO := 9001;
            RETURN RETORNO;
        --VALIDACION DEL PARAMETRO wID_PREGUNTA EXISTA
        ELSIF NOT EXISTS(SELECT 1 FROM TAB_PREGUNTA WHERE ID_PREGUNTA = wID_PREGUNTA) THEN
            RETORNO := 9002;
            RETURN RETORNO;
        --VALIDACION DEL PARAMETRO wTEXTO_OPCION TIENE QUE SER MAYOR A 0 CARACTERES Y NO NULO
        ELSIF LENGTH(wTEXTO_OPCION) < 1 OR wTEXTO_OPCION IS NULL THEN
            RETORNO := 9003;
            RETURN RETORNO;
        --VALIDACION DEL PARAMETRO wES_CORRECTA TIENE QUE SER BOOLEANO Y NO NULO
        ELSIF wES_CORRECTA IS NULL THEN
            RETORNO := 9004;
            RETURN RETORNO;
        --VALIDAR SI LA OPCION YA EXISTE EN LA PREGUNTA
        --CONVERTIR EL TEXTO A MAYUSCULAS
        ELSEIF EXISTS(SELECT 1 FROM TAB_OPCIONES_PREGUNTA WHERE UPPER(TEXTO_OPCION) = UPPER(wTEXTO_OPCION) AND ID_PREGUNTA = wID_PREGUNTA) THEN
            RETORNO := 9005;
            RETURN RETORNO;
        ELSE
            RETORNO := 200;
            RETURN RETORNO;
        END IF;        
    END;
$$
LANGUAGE plpgsql;

--FUNCION PARA INSERTAR UNA OPCION DE PREGUNTA
CREATE OR REPLACE FUNCTION FUN_INSERTAR_OPCIONES_PREGUNTA(wID_PREGUNTA TAB_OPCIONES_PREGUNTA.ID_PREGUNTA%TYPE,
                            wTEXTO_OPCION TAB_OPCIONES_PREGUNTA.TEXTO_OPCION%TYPE,
                            wES_CORRECTA TAB_OPCIONES_PREGUNTA.ES_CORRECTA%TYPE) RETURNS INTEGER AS
$$
    DECLARE
        RETORNO INTEGER;
        wVALIDAR INTEGER;
        ULTIMOID INTEGER;
    BEGIN
        --VALIDACION DE LOS DATOS A INSERTAR
        wVALIDAR := FUN_VALIDAR_DATOS_OPCIONES_PREGUNTA(wID_PREGUNTA,wTEXTO_OPCION,wES_CORRECTA);
        IF wVALIDAR <> 200 THEN
            RETORNO := wVALIDAR;
            RETURN RETORNO;
        ELSE
            --GENERAR ID AUTOINCREMENTABLE USANDO LA FUNCION funcion_Retorna_ultmoid
            SELECT INTO ULTIMOID funcion_Retorna_ultmoid('TAB_OPCIONES_PREGUNTA','ID_OPCION');
            --CONVERTIR EL TEXTO A MAYUSCULAS
            wTEXTO_OPCION := UPPER(wTEXTO_OPCION);
            --INSERTAR DATOS EN LA TABLA OPCIONES_PREGUNTA
            INSERT INTO TAB_OPCIONES_PREGUNTA VALUES(ULTIMOID,wID_PREGUNTA,wTEXTO_OPCION,wES_CORRECTA);
            IF FOUND THEN
                RETORNO := 200;
                RETURN RETORNO;
            ELSE
                RETORNO := 1;
                RETURN RETORNO;
            END IF;
        END IF;
    END;
$$
LANGUAGE plpgsql;

--FUNCION PARA INSERTAR UNA OPCION DE PREGUNTA RETORNANDO UN JSON CON EL RESULTADO, MENSAJE Y ID DE LA OPCION
CREATE OR REPLACE FUNCTION FUN_INSERTAR_OPCIONES_PREGUNTA_JSON(wID_PREGUNTA TAB_OPCIONES_PREGUNTA.ID_PREGUNTA%TYPE,
                            wTEXTO_OPCION TAB_OPCIONES_PREGUNTA.TEXTO_OPCION%TYPE,
                            wES_CORRECTA TAB_OPCIONES_PREGUNTA.ES_CORRECTA%TYPE) RETURNS JSON AS
$$
    DECLARE
        RETORNO JSON;
        wVALIDAR INTEGER;
        ULTIMOID INTEGER;
    BEGIN
        --VALIDACION DE LOS DATOS A INSERTAR
        wVALIDAR := FUN_VALIDAR_DATOS_OPCIONES_PREGUNTA(wID_PREGUNTA,wTEXTO_OPCION,wES_CORRECTA);
        IF wVALIDAR <> 200 THEN
            RETORNO := json_build_object('CODIGO',wVALIDAR,'MENSAJE',(SELECT desc_mensaje FROM TAB_MENSAJES WHERE id_mensaje = wVALIDAR));
            RETURN RETORNO;
        ELSE
            --GENERAR ID AUTOINCREMENTABLE USANDO LA FUNCION funcion_Retorna_ultmoid
            SELECT INTO ULTIMOID funcion_Retorna_ultmoid('TAB_OPCIONES_PREGUNTA','ID_OPCION');
            --CONVERTIR EL TEXTO A MAYUSCULAS
            wTEXTO_OPCION := UPPER(wTEXTO_OPCION);
            --INSERTAR DATOS EN LA TABLA OPCIONES_PREGUNTA
            INSERT INTO TAB_OPCIONES_PREGUNTA VALUES(ULTIMOID,wID_PREGUNTA,wTEXTO_OPCION,wES_CORRECTA);
            IF FOUND THEN
                RETORNO := json_build_object('CODIGO',200,'MENSAJE',(SELECT desc_mensaje FROM TAB_MENSAJES WHERE id_mensaje = 200),'DATOS',json_build_object('ID_OPCION',ULTIMOID));
                RETURN RETORNO;
            ELSE
                RETORNO := json_build_object('CODIGO',1,'MENSAJE',(SELECT desc_mensaje FROM TAB_MENSAJES WHERE id_mensaje = 1));
                RETURN RETORNO;
            END IF;
        END IF;
    END;
$$
LANGUAGE plpgsql;