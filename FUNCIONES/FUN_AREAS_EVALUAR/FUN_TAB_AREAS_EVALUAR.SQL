--FUNCIONES TRANSACCIONALES Y DE INSERCION DE DATOS PARA LA TABLA TAB_AREAS_EVALUAR------------------------------------------------------------------------------------------------------------
--FUNCION PARA VALIDAR LOS DATOS A INSERTAR EN LA TABLA AREAS_EVALUAR
CREATE OR REPLACE FUNCTION FUN_VALIDAR_DATOS_AREAS_EVALUAR(wNOM_AREA_EVALUAR TAB_AREAS_EVALUAR.NOM_AREA_EVALUAR%TYPE,
                            wDESCRIPCION_AREA_EVALUAR TAB_AREAS_EVALUAR.DESCRIPCION_AREA_EVALUAR%TYPE,
                            Wval_ponderacion TAB_AREAS_EVALUAR.val_ponderacion%TYPE) RETURNS INTEGER AS 
$$
    DECLARE
        RETORNO INTEGER;
    BEGIN
        --VALIDACION DEL PARAMETRO wNOM_AREA_EVALUAR TIENE QUE SER MAYOR A 3 CARACTERES Y NO NULO
        IF LENGTH(wNOM_AREA_EVALUAR) < 3 OR wNOM_AREA_EVALUAR IS NULL THEN
            RETORNO := 1001;
            RETURN RETORNO;
        --VALIDACION DEL PARAMETRO wDESCRIPCION_AREA_EVALUAR TIENE QUE SER MAYOR A 3 CARACTERES Y NO NULO
        ELSIF LENGTH(wDESCRIPCION_AREA_EVALUAR) < 3 OR wDESCRIPCION_AREA_EVALUAR IS NULL THEN
            RETORNO := 1002;
            RETURN RETORNO;
        --VALIDACION DEL PARAMETRO Wval_ponderacion TIENE QUE SER MAYOR A 0 Y NO NULO
        ELSIF Wval_ponderacion <= 0 OR Wval_ponderacion IS NULL THEN
            RETORNO := 1003;
            RETURN RETORNO;
        --EVALUAR SI EL AREA A EVALUAR YA EXISTE
        --CONVERTIR EL NOMBRE A MAYUSCULAS
        ELSEIF EXISTS(SELECT * FROM TAB_AREAS_EVALUAR WHERE UPPER(NOM_AREA_EVALUAR) = UPPER(wNOM_AREA_EVALUAR)) THEN
            RETORNO := 1004;
            RETURN RETORNO;
        ELSE
            RETORNO := 200;
            RETURN RETORNO;
        END IF;        
    END;
$$
LANGUAGE plpgsql;

--FUNCION PARA INSERTAR DATOS EN LA TABLA AREAS_EVALUAR
CREATE OR REPLACE FUNCTION FUN_INSERTAR_AREAS_EVALUAR(wNOM_AREA_EVALUAR TAB_AREAS_EVALUAR.NOM_AREA_EVALUAR%TYPE,
                            wDESCRIPCION_AREA_EVALUAR TAB_AREAS_EVALUAR.DESCRIPCION_AREA_EVALUAR%TYPE,
                            Wval_ponderacion TAB_AREAS_EVALUAR.val_ponderacion%TYPE) RETURNS INTEGER AS
$$
    DECLARE
        RETORNO INTEGER;
        VALIDACION INTEGER;
        ULTIMOID INTEGER;
    BEGIN
        --VALIDAR LOS DATOS A INSERTAR
        VALIDACION := FUN_VALIDAR_DATOS_AREAS_EVALUAR(wNOM_AREA_EVALUAR,wDESCRIPCION_AREA_EVALUAR,Wval_ponderacion);
        --SI LA VALIDACION ES CORRECTA INSERTAR LOS DATOS
        IF VALIDACION = 200 THEN
            --GENERAR ID AUTOINCREMENTABLE USANDO LA FUNCION funcion_Retorna_ultmoid
            SELECT INTO ULTIMOID funcion_Retorna_ultmoid('TAB_AREAS_EVALUAR','ID_AREA_EVALUAR');
            --CONVERTIR EL NOMBRE A MAYUSCULAS
            wNOM_AREA_EVALUAR := UPPER(wNOM_AREA_EVALUAR);
            --INSERTAR DATOS EN LA TABLA AREAS_EVALUAR
            INSERT INTO TAB_AREAS_EVALUAR VALUES(ULTIMOID,wNOM_AREA_EVALUAR,wDESCRIPCION_AREA_EVALUAR,Wval_ponderacion);
            IF FOUND THEN
                RETORNO := 200;
                RETURN RETORNO;
            ELSE
                RETORNO := 1;
                RETURN RETORNO;
            END IF;
        ELSE
            RETORNO := VALIDACION;
            RETURN RETORNO;
        END IF;
    END;
$$
LANGUAGE plpgsql;




